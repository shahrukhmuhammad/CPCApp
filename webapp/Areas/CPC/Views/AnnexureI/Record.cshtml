
@model CPCAnnexureI
@{
    var queryId = ViewContext.RouteData.Values["Id"];
    ViewBag.Title = (queryId == null ? "Add New Annexure I" : "Edit Annexure I");
}

<form id="lead-frm" class="user-Profile" method="post" enctype="multipart/form-data">
    @Html.AntiForgeryToken()

   @Html.HiddenFor(x=> x.Id)

    <div class="row">
        <div class="col-sm-12 text-right">
            <div class="btn-group" role="group">
                <a href="javascript://" onclick="window.history.back()" class="btn btn-default"><i class="fa fa-close"></i> Cancel / Back</a>
                <button type="submit" id="submit" class="btn btn-success"><i class="fa fa-check"></i> Submit</button>
            </div>
        </div>
    </div>


    <div class="row">
        <div class="col-sm-12">
            <div class="panel panel-default">
                @*<div class="panel-heading">
                    <span>Add Products</span>
                </div>*@
                <div class="panel-body">
                    <div class="row">
                        <div class="col-sm-1">
                            <label>&nbsp; &nbsp;</label> <br />
                            <button class="btn btn-primary btn-sm btn-custom" type="button" id="btn_AddProduct" title="Add Product"><i class="fa fa-plus"></i> Add New Row</button>
                        </div>
                        <br />
                    </div>

                    <br />
                    <div class="row tb-padding">
                        <table id="mytable" class="table table-striped table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th style="width:5% !important">S.No</th>
                                    <th>Collection Date</th>
                                    <th>Cash Processing Cell</th>
                                    <th>Branch</th>
                                    <th>Denomination</th>
                                    <th>No. Of Bundles</th>
                                    <th>Total Amount</th>
                                    <th>Seal No.</th>
                                    <th>Shipment Receipt</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td><label id="SrNo">1000</label></td>
                                    <td><input class="form-control input-sm" name="AccountsList[0].AccountName" /></td>
                                    <td><input class="form-control input-sm" name="AccountsList[0].AccountName" /></td>
                                    <td><input class="form-control input-sm" name="AccountsList[0].AccountName" /></td>
                                    <td><input class="form-control input-sm" name="AccountsList[0].AccountName" /></td>
                                    <td><input class="form-control input-sm" name="AccountsList[0].AccountName" /></td>
                                    <td><input class="form-control input-sm" name="AccountsList[0].AccountName" /></td>
                                    <td><input class="form-control input-sm" name="AccountsList[0].AccountName" /></td>
                                    <td><input class="form-control input-sm" name="AccountsList[0].AccountName" /></td>
                                    <td> 
                                        <a href="javascript://" onclick="" class="btn btn-xs btn-danger" title="Delete"><i class="fa fa-trash"></i> Delete</a></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12 text-right">
            <div class="btn-group" role="group">
                <a href="javascript://" onclick="window.history.back()" class="btn btn-default"><i class="fa fa-close"></i> Cancel / Back</a>
                <button type="submit" id="submit" class="btn btn-success"><i class="fa fa-check"></i> Submit</button>
            </div>
        </div>
    </div>
</form>


@section scripts{

<script type="text/javascript">
        $(document).ready(function () {
            //-- Read Only Mode Trigger -//
            @*if ('@ViewData["IsView"]' != '') {
                $("input").attr("readonly", true);
                $("#IsActive").attr("disabled", true);
                $("#submit").hide();
            }*@



            //$("#txtVoucherDate").mask("99-99-9999");
            var accountGridRowIndex;

            @*$('#txtVoucherDate').datepicker({
            dateFormat: 'dd-mm-yy',
            prevText: '<i class="fa fa-chevron-left"></i>',
            nextText: '<i class="fa fa-chevron-right"></i>',
            minDate: '@(new AppSession().getFinancialStartDate())',
            maxDate: '@(new AppSession().getFinancialEndDate())'
            });*@

            //Page Load
            var rowCount = $('#Grid tbody tr').length;
            //alert(rowCount);
            if (rowCount == 0) {
                rowCount++;
                AddFirstRow(rowCount);

                //alert("In");
            }
            function isLastRow() {
                //debugger;
                return accountGridRowIndex == $("#Grid tr:last").attr("data-id")
            }

            //btn-remove Click
            $(document).on('click', '.btn-removeRow', function (e) {
                e.preventDefault();

                //accountGridRowIndex = $(this).closest('tr').attr("data-id");
                $(this).closest('tr').remove();
                // console.log(accountGridRowIndex);
                GetTotal();
            });
        });

        //Functions
                function generateHtml(row) {
                var _html = '<tr class="rows" data-id="' + row + '">'
                _html += '<td class="text-center" > ' + row + '</td >'
                _html += '<td><div class="input-group"><input name="AccountsList[' + (row - 1) + '].AccountCode" id="txt_AccountCode' + row + '" onkeydown="showAccountPopup(event);" type="text" class="AccountCode form-control" /><div class="input-group-btn"><button class="btn btn-info btn-sm btn-accountGrid" type="button" id="btn_help' + row + '" data-toggle="modal" data-target="#myModal"> <i class="fa fa-search"></i></button></div></div></td>'
                _html += '<td><input name="AccountsList[' + (row - 1) + '].AccountName" id="txt_AccountName' + row + '" type="text" readonly="readonly" class="form-control"></td>'
                _html += '<td><input name="AccountsList[' + (row - 1) + '].Narration" id="txt_Narration' + row + '" type="text" class="form-control"></td>'
                _html += '<td><input name="AccountsList[' + (row - 1) + '].Debit" id="txt_Debit' + row + '" type="number" class="Debit form-control" pattern="[0-9]"></td>'
                _html += '<td><input name="AccountsList[' + (row - 1) + '].Credit" id="txt_Credit' + row + '" class="Credit form-control" type="number" pattern="[0-9]"></td>'
                _html += '<td> <a id="btn_delete' + row + '" class="btn btn-danger btn-sm btn-removeRow"><i class="glyphicon glyphicon-remove"></i></a> </td></tr>';
                return _html;
            }

        function AddFirstRow(row) {
            if (isEmptyLastRow()) {
                $('#Grid tbody').append(generateHtml(row));
                $("#divGrid").find("input[type=text]").addClass("form-control input-sm"); //adding class to inputs in Grid
               // $('.autonumber').autoNumeric('init');
            }
        }

        function AddNewRow(row) {
            if (isEmptyLastRow()) {
                $('#Grid tr:last').after(generateHtml(row));
                //$('.autonumber').autoNumeric('init');
            }
        }

        function isEmptyLastRow() {
            var test = $("#Grid tr:last td:eq(1)").find("input");
            return "" !== $("#Grid tr:last td:eq(1)").find("input").val() && "" !== $("#Grid tr:last td:eq(2)").find("input").val();
        }

        function GetTotal() {
            //debugger;
            debit = 0;
            credit = 0;
            //console.log(accountGridRowIndex);

            for (var i = 1; i < accountGridRowIndex; i++) {
                //console.log("For LOOP, i= " + i);
                if ($("#txt_AccountCode" + i).val() != "" && $("#txt_AccountName" + i).val() != "") {

                    debit += parseFloat($("#txt_Debit" + i).val());
                    credit += parseFloat($("#txt_Credit" + i).val());

                    //console.log("D :" + debit + "C :" + credit);
                }
                $("#txt_difference").val(parseFloat(debit - credit).toFixed(2));
                $("#TotalDebit").val(parseFloat(debit).toFixed(2));
                $("#TotalCredit").val(parseFloat(credit).toFixed(2));
            }
        }
</script>
}

