
@model CPCUnsortedCash
@{
    var queryId = ViewContext.RouteData.Values["Id"];
    ViewBag.Title = (queryId == null ? "Add New Unsorted Cash" : "Edit Unsorted Cash");
    var denomList = ViewBag.DenominationList as List<CPCDenomination>;
}

<form id="lead-frm" class="user-Profile" method="post" enctype="multipart/form-data">
    @Html.AntiForgeryToken()

    @Html.HiddenFor(x => x.Id)

    <div class="row">
        <div class="col-sm-12 text-right">
            <div class="btn-group" role="group">
                <a href="javascript://" onclick="window.history.back()" class="btn btn-default"><i class="fa fa-close"></i> Cancel / Back</a>
                <button type="submit" id="submit" class="btn btn-success"><i class="fa fa-check"></i> Submit</button>
            </div>
        </div>
    </div>


    <div class="row">
        <div class="col-sm-12">
            <div class="panel panel-default">
                <div class="panel-body">
                    <h4> Unsorted Cash </h4>
                    <div class="row tb-padding">
                        <table id="mytable" class="table table-striped table-bordered table-hover">
                            <thead>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>Date:</td>
                                    <td>
                                        <div class="input-group input-group-sm">
                                            <input name="Date" id="Date" class="form-control input-sm datePicker" type="text" value="@Model.Date.ToString(Constants.DATE_FORMAT_CLIENT_SIDE)" required autocomplete="off">
                                            <span class="input-group-addon">
                                                <span class="fa fa-calendar"></span>
                                            </span>
                                        </div>
                                    </td>
                                    <td>Serial Number</td>
                                    <td>
                                        @Html.TextBoxFor(x => x.SerialNumber, new { @class = "form-control input-sm", @required = "required", @autofocus = "true" })
                                        @Html.ValidationMessageFor(m => m.SerialNumber)
                                    </td>
                                </tr>
                                <tr>
                                    <td>Station:</td>
                                    <td>
                                        @Html.TextBoxFor(x => x.Station, new { @class = "form-control input-sm", @required = "required", @autofocus = "true" })
                                        @Html.ValidationMessageFor(m => m.Station)
                                    </td>
                                    <td></td>
                                </tr>
                                <tr>
                                    <td>Client:</td>
                                    <td>
                                        @Html.TextBoxFor(x => x.Client, new { @class = "form-control input-sm", @required = "required", @autofocus = "true" })
                                        @Html.ValidationMessageFor(m => m.Client)
                                    </td>
                                    <td></td>
                                </tr>
                                <tr><td></td><td></td><td></td></tr>
                                <tr>
                                    <td>Denomination</td>
                                    <td>Volume in Bundles</td>
                                    <td>Amount</td>
                                </tr>
                                <tr>
                                    <td>
                                        Rs.1/-
                                        <input type="hidden" name="CPCUnsortedCashDetail[0].DenominationId" value="@(denomList.Where(x=> x.DenominationTitle == 1).FirstOrDefault().Id)" />
                                    </td>
                                    <td data-id="1">
                                        <input type="number" name="CPCUnsortedCashDetail[0].NumberOfBundles" class="form-control input-sm inp" />
                                    </td>
                                    <td>
                                        <input type="number" name="CPCUnsortedCashDetail[0].TotalValue" class="form-control input-sm" />
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        Rs.2/-
                                        <input type="hidden" name="CPCUnsortedCashDetail[1].DenominationId" value="@(denomList.Where(x=> x.DenominationTitle == 2).FirstOrDefault().Id)" />
                                    </td>
                                    <td data-id="2">
                                        <input type="number" name="CPCUnsortedCashDetail[1].NumberOfBundles" class="form-control input-sm inp" />
                                    </td>
                                    <td>
                                        <input type="number" name="CPCUnsortedCashDetail[1].TotalValue" class="form-control input-sm" />
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        Rs.5/-
                                        <input type="hidden" name="CPCUnsortedCashDetail[2].DenominationId" value="@(denomList.Where(x=> x.DenominationTitle == 5).FirstOrDefault().Id)" />
                                    </td>
                                    <td data-id="5">
                                        <input type="number" name="CPCUnsortedCashDetail[2].NumberOfBundles" class="form-control input-sm inp" />
                                    </td>
                                    <td>
                                        <input type="number" name="CPCUnsortedCashDetail[2].TotalValue" class="form-control input-sm" />
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        Rs.10/-
                                        <input type="hidden" name="CPCUnsortedCashDetail[3].DenominationId" value="@(denomList.Where(x=> x.DenominationTitle == 10).FirstOrDefault().Id)" />
                                    </td>
                                    <td data-id="10">
                                        <input type="number" name="CPCUnsortedCashDetail[3].NumberOfBundles" class="form-control input-sm inp" />
                                    </td>
                                    <td>
                                        <input type="number" name="CPCUnsortedCashDetail[3].TotalValue" class="form-control input-sm" />
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        Rs.20/-
                                        <input type="hidden" name="CPCUnsortedCashDetail[4].DenominationId" value="@(denomList.Where(x=> x.DenominationTitle == 20).FirstOrDefault().Id)" />
                                    </td>
                                    <td data-id="20">
                                        <input type="number" name="CPCUnsortedCashDetail[4].NumberOfBundles" class="form-control input-sm inp" />
                                    </td>
                                    <td>
                                        <input type="number" name="CPCUnsortedCashDetail[4].TotalValue" class="form-control input-sm" />
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        Rs.50/-
                                        <input type="hidden" name="CPCUnsortedCashDetail[5].DenominationId" value="@(denomList.Where(x=> x.DenominationTitle == 50).FirstOrDefault().Id)" />
                                    </td>
                                    <td data-id="50">
                                        <input type="number" name="CPCUnsortedCashDetail[5].NumberOfBundles" class="form-control input-sm inp" />
                                    </td>
                                    <td>
                                        <input type="number" name="CPCUnsortedCashDetail[5].TotalValue" class="form-control input-sm" />
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        Rs.100/-
                                        <input type="hidden" name="CPCUnsortedCashDetail[6].DenominationId" value="@(denomList.Where(x=> x.DenominationTitle == 100).FirstOrDefault().Id)" />
                                    </td>
                                    <td data-id="100">
                                        <input type="number" name="CPCUnsortedCashDetail[6].NumberOfBundles" class="form-control input-sm inp" />
                                    </td>
                                    <td>
                                        <input type="number" name="CPCUnsortedCashDetail[6].TotalValue" class="form-control input-sm" />
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        Rs.500/-
                                        <input type="hidden" name="CPCUnsortedCashDetail[7].DenominationId" value="@(denomList.Where(x=> x.DenominationTitle == 500).FirstOrDefault().Id)" />
                                    </td>
                                    <td data-id="500">
                                        <input type="number" name="CPCUnsortedCashDetail[7].NumberOfBundles" class="form-control input-sm inp" />
                                    </td>
                                    <td>
                                        <input type="number" name="CPCUnsortedCashDetail[7].TotalValue" class="form-control input-sm" />
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        Rs.1000/-
                                        <input type="hidden" name="CPCUnsortedCashDetail[8].DenominationId" value="@(denomList.Where(x=> x.DenominationTitle == 1000).FirstOrDefault().Id)" />
                                    </td>
                                    <td data-id="1000">
                                        <input type="number" name="CPCUnsortedCashDetail[8].NumberOfBundles" class="form-control input-sm inp" />
                                    </td>
                                    <td>
                                        <input type="number" name="CPCUnsortedCashDetail[8].TotalValue" class="form-control input-sm" />
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        Rs.5000/-
                                        <input type="hidden" name="CPCUnsortedCashDetail[9].DenominationId" value="@(denomList.Where(x=> x.DenominationTitle == 5000).FirstOrDefault().Id)" />
                                    </td>
                                    <td data-id="5000">
                                        <input type="number" name="CPCUnsortedCashDetail[9].NumberOfBundles" class="form-control input-sm inp" />
                                    </td>
                                    <td>
                                        <input type="number" name="CPCUnsortedCashDetail[9].TotalValue" class="form-control input-sm" />
                                    </td>
                                </tr>
                                <tr>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                </tr>
                                <tr>
                                    <td>Total Balance</td>
                                    <td>
                                        @Html.TextBoxFor(x => x.TotalNumberBundles, new { @class = "form-control input-sm", @required = "required", @autofocus = "true" })
                                        @Html.ValidationMessageFor(m => m.TotalNumberBundles)
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(x => x.TotalBalance, new { @class = "form-control input-sm", @required = "required", @autofocus = "true" })
                                        @Html.ValidationMessageFor(m => m.TotalBalance)
                                    </td>
                                </tr>
                            </tbody>
                        </table>

                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12 text-right">
            <div class="btn-group" role="group">
                <a href="javascript://" onclick="window.history.back()" class="btn btn-default"><i class="fa fa-close"></i> Cancel / Back</a>
                <button type="submit" id="submit" class="btn btn-success"><i class="fa fa-check"></i> Submit</button>
            </div>
        </div>
    </div>
</form>


@section scripts{

    <script type="text/javascript">
        $(document).ready(function () {

            //"#DateOfCashReturn"
            $("#Date").data("DateTimePicker").date(moment('@Model.Date.ToShortDateString()'));

            //input fields leave event
            $(document).on('focusout', '.inp', function (e) {
                e.preventDefault();
                accountGridRowIndex = $(this).closest('td').attr("data-id");
                const totalValue = GetTotalVal($(this).val(), accountGridRowIndex);
                $(this).closest('td').next('td').find('input').val(totalValue);
            });



        });

        function GetTotalVal(unsortedValue, denomVal) {
            const totalVal = parseInt(unsortedValue) * parseInt(denomVal) * 1000;
            return isNaN(totalVal) ? '0' : totalVal;
        }
    </script>
}

